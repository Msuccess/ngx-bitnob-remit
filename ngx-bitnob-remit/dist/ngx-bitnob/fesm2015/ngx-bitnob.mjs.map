{"version":3,"file":"ngx-bitnob.mjs","sources":["../../../projects/ngx-bitnob/src/lib/ngx-bitnob.service.ts","../../../projects/ngx-bitnob/src/lib/ngx-bitnob.component.ts","../../../projects/ngx-bitnob/src/lib/ngx-bitnob.module.ts","../../../projects/ngx-bitnob/src/public-api.ts","../../../projects/ngx-bitnob/src/ngx-bitnob.ts"],"sourcesContent":["import { DOCUMENT } from '@angular/common';\nimport { Inject, Injectable, Renderer2 } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class NgxBitnobService {\n  constructor(@Inject(DOCUMENT) private document: Document) {}\n\n  /**\n   * Append the JS tag to the Document Body.\n   * @param renderer The Angular Renderer\n   * @param src The path to the script\n   * @returns the script element\n   */\n  public loadJsScript(renderer: Renderer2, src: string): HTMLScriptElement {\n    const script = renderer.createElement('script');\n    script.type = 'text/javascript';\n    script.src = src;\n    renderer.appendChild(this.document.body, script);\n    return script;\n  }\n}\n","import {\n  Component,\n  EventEmitter,\n  HostListener,\n  Input,\n  OnInit,\n  Output,\n  Renderer2,\n} from '@angular/core';\nimport { NgxBitnobService } from './ngx-bitnob.service';\n\nconst SCRIPT_PATH =\n  'https://cdn.jsdelivr.net/gh/Msuccess/widget@master/bitnob-remittance.js';\ndeclare let initializePayment: any;\n\n@Component({\n  selector: 'ngx-bitnob[publicKey][senderName][environment][callbackUrl]',\n  template: ` <div class=\"hello\">\n    <button class=\"payButton\" (click)=\"payWithBitnob()\">\n      <div\n        class=\"img\"\n        [style.background-image]=\"'url(' + buttonImg + ')'\"\n      ></div>\n      <p>{{ buttonTitle }}</p>\n    </button>\n  </div>`,\n  styles: [\n    `\n      @import url('https://fonts.googleapis.com/css2?family=Quicksand&display=swap');\n      .payButton {\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        background-color: #031735;\n        color: #ffffff;\n        border: none;\n        padding: 10px 30px;\n        border-radius: 10px;\n        cursor: pointer;\n        font-family: 'Quicksand', sans-serif;\n      }\n      .img {\n        width: 20px;\n        background-position: center;\n        background-size: contain;\n        background-repeat: no-repeat;\n        height: 20px;\n        margin-right: 10px;\n      }\n    `,\n  ],\n})\nexport class NgxBitnobComponent implements OnInit {\n  constructor(\n    private renderer: Renderer2,\n    private ngxBitnobService: NgxBitnobService\n  ) {}\n\n  @Input() publicKey: string = '';\n  @Input() buttonTitle: string = 'Pay With Bitnob';\n  @Input() buttonImg: string =\n    'https://res.cloudinary.com/gabbyprecious/image/upload/v1650746449/cad8exitdhnparfqyfjf.png';\n  @Input() callbackUrl: string = '';\n  @Input() environment: string = 'sandbox';\n  @Input() senderName: string = '';\n  @Output() changed = new EventEmitter();\n\n  payWithBitnob(): void {\n    var data = {\n      pk: this.publicKey,\n      callbackUrl: this.callbackUrl,\n      senderName: this.senderName,\n    };\n\n    initializePayment(data, this.environment);\n  }\n\n  @HostListener('window:GetPaymentDetails', ['$event'])\n  onChanged(event: any) {\n    this.changed.emit(event.detail);\n  }\n\n  ngOnInit() {\n    const scriptElement = this.ngxBitnobService.loadJsScript(\n      this.renderer,\n      SCRIPT_PATH\n    );\n    scriptElement.onload = () => {\n      console.log('Bitnob Script loaded');\n    };\n    scriptElement.onerror = () => {\n      alert('Could not load the Bitnob Script!');\n    };\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { NgxBitnobComponent } from './ngx-bitnob.component';\n\n@NgModule({\n  declarations: [NgxBitnobComponent],\n  imports: [],\n  exports: [NgxBitnobComponent],\n})\nexport class NgxBitnobModule {}\n","/*\n * Public API Surface of ngx-bitnob\n */\n\nexport * from './lib/ngx-bitnob.service';\nexport * from './lib/ngx-bitnob.component';\nexport * from './lib/ngx-bitnob.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i1.NgxBitnobService"],"mappings":"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"}